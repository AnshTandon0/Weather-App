(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{"+rdI":function(n,t,i){"use strict";i.r(t),i.d(t,"ActivitiesPageModule",(function(){return f}));var e=i("mrSG"),o=i("fXoL"),r=i("ofXK"),c=i("3Pt+"),a=i("sYmb"),s=i("TEn/"),l=i("tyNb"),d=i("9ans"),u=i("AytR"),g=i("sRcL"),m=i("jhN1");let h=class{constructor(n,t,i){this.ajax=n,this.auth=t,this.titleService=i,this.activities=null,this.currentPage=0,this.isTimeout=!1,this.maintenanceImg=u.a.maintenanceImg}ngOnInit(){this.getActivities()}ionViewDidEnter(){this.titleService.setTitle("Activities")}getActivities(n=1){this.currentPage=n,this.activities=null;let t={jtoken:this.auth.getToken(),"device-security-id":this.auth.getDeviceId()};this.ajax.getMethod(u.a.activities+this.currentPage,t).subscribe(n=>{null!=n.name&&"TimeoutError"==n.name?(this.isTimeout=!0,this.ajax.showToast(n.message,3e3,"warning","bottom"),this.activities=[]):null==n.data?(this.isTimeout=!0,this.activities=[]):this.activities=n})}replaceRegex(n){return n.replace(/\//g,"")}};h.ctorParameters=()=>[{type:g.a},{type:d.a},{type:m.d}],h=Object(e.c)([Object(o.n)({selector:"app-activities",template:Object(e.f)(i("06pu")).default,styles:[Object(e.f)(i("EuA5")).default]})],h);const b=[{path:"",component:h}];let v=class{};v=Object(e.c)([Object(o.M)({imports:[l.i.forChild(b)],exports:[l.i]})],v);let f=class{};f=Object(e.c)([Object(o.M)({imports:[r.b,c.b,s.d,v,a.b.forChild()],declarations:[h]})],f)},"06pu":function(n,t,i){"use strict";i.r(t),t.default='<ion-header>\r\n    <ion-toolbar>\r\n        <ion-buttons slot="start">\r\n            <ion-menu-button></ion-menu-button>\r\n        </ion-buttons>\r\n        <ion-title></ion-title>\r\n    </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class="ion-padding">\r\n    <ion-grid [fixed]="true">\r\n        <ion-row *ngIf="!isTimeout">\r\n            <ion-col size="12">\r\n                <ion-text color="tertiary">\r\n                    <h2><strong>\r\n                    {{"Activities" | translate}}\r\n                </strong>\r\n                    </h2>\r\n                </ion-text>\r\n                <ion-text>\r\n                    <h4>{{"Here you can find all the activities performed in your Digilocker account." | translate}}</h4>\r\n                </ion-text>\r\n            </ion-col>\r\n        </ion-row>\r\n    </ion-grid>\r\n    <ion-grid [fixed]="true" *ngIf="activities">\r\n        <ion-row class="ion-text-center" *ngIf="!activities.data.length">\r\n            <ion-col size-md="8" offset-md="2" size="12" >\r\n                <ion-row class="ion-no-margin">\r\n                    <ion-col class="ion-text-center">\r\n                        <img width="300px" [src]="isTimeout?maintenanceImg:\'https://img1.digitallocker.gov.in/assets/img/icons/no-activity-1.svg\'" alt="No Activity">\r\n                    </ion-col>\r\n                </ion-row>\r\n                <ion-row class="ion-no-margin" *ngIf="isTimeout">\r\n                    <ion-col class="ion-text-center">\r\n                        <ion-text color="dark" class="ion-margin-top">\r\n                            <h1>We are under Scheduled Maintenance</h1>\r\n                        </ion-text>\r\n                        <ion-text class="cursor ion-margin-top" color="tertiary" routerLink="/home" routerDirection="root">\r\n                            <h1>Go to Home</h1>\r\n                        </ion-text>\r\n                    </ion-col>\r\n                </ion-row>\r\n                <ion-row class="ion-no-margin" *ngIf="!isTimeout">\r\n                    <ion-col class="ion-text-center">\r\n                        <ion-text color="dark" class=" ion-text-center">\r\n                            <h1>There is no activity yet...</h1>\r\n                        </ion-text>\r\n                        <ion-text class="ion-text-center ion-text-wrap">\r\n                            <h3>but we can solve that, just browse and issue the document you are looking for.</h3>\r\n                        </ion-text>\r\n                        <ion-title class="ion-text-center ion-margin-top">\r\n                            <ion-button class="text-center" routerLink="/dashboard">Browse Documents</ion-button>\r\n                        </ion-title>\r\n                    </ion-col>\r\n                </ion-row>\r\n            </ion-col>\r\n        </ion-row>\r\n        <ion-row *ngIf="activities.data.length">\r\n                <ion-col>\r\n                <div  *ngFor="let act of activities.data;index as i">\r\n                    <ion-card mode="ios" *ngIf="act.message" class="ion-no-margin ion-margin-bottom ">\r\n\r\n                        <ion-card-content class="ion-no-padding">\r\n                            <ion-item lines="none">\r\n                                <ion-icon color="{{(act.type==\'uri_deleted\')?\'danger\':(act.type==\'uri_saved\')?\'success\':(act.type==\'file_created\')?\'success\':(act.type==\'file_deleted\')?\'danger\':\'dark\'}}" name="{{(act.type==\'uri_deleted\')?\'remove-circle\':(act.type==\'uri_saved\')?\'arrow-down-circle\':(act.type==\'file_created\')?\'add-circle\':(act.type==\'file_deleted\')?\'remove-circle\':\'alert-circle\'}}"></ion-icon>\r\n                                <ion-label class="ion-padding-start"> {{replaceRegex(act.message)}} <br> <small> {{act.date | date:\'dd-MM-YYYY\'}}</small></ion-label>\r\n\r\n\r\n                            </ion-item>\r\n\r\n                        </ion-card-content>\r\n                    </ion-card>\r\n                </div>\r\n                </ion-col>\r\n        </ion-row>\r\n        <ion-row *ngIf="activities.count">\r\n            <ion-col>\r\n                <ion-buttons class="ion-float-end">\r\n                    <ion-button *ngIf="currentPage>1" (click)="getActivities(currentPage-1)">\r\n                        Prev\r\n                    </ion-button>\r\n                    <ion-button *ngIf="currentPage>1" (click)="getActivities(1)">\r\n                        Start\r\n                    </ion-button>\r\n                    <ion-button *ngIf="activities.count > currentPage" (click)="getActivities(currentPage+1)">\r\n                        Next\r\n                    </ion-button>\r\n                    <ion-button *ngIf="activities.count > currentPage" (click)="getActivities(activities.count)">\r\n                        Last\r\n                    </ion-button>\r\n                </ion-buttons>\r\n            </ion-col>\r\n        </ion-row>\r\n    </ion-grid>\r\n    <ion-grid [fixed]="true"  *ngIf="!activities">\r\n        <ion-list>\r\n            <ion-card mode="ios" class="ion-no-margin ion-margin-bottom " *ngFor="let act of [].constructor(10);">\r\n                <ion-card-content class="ion-no-padding">\r\n                    <ion-item lines="none">\r\n                        <ion-icon name="ellipse" color="medium"></ion-icon>\r\n                        <ion-label class="ion-padding-start">\r\n                            <ion-skeleton-text animated style="width: 100%;"></ion-skeleton-text>\r\n                            <small><ion-skeleton-text animated style="width: 30%;"></ion-skeleton-text></small>\r\n                        </ion-label>\r\n                    </ion-item>\r\n                </ion-card-content>\r\n            </ion-card>\r\n        </ion-list>\r\n    </ion-grid>\r\n</ion-content>'},EuA5:function(n,t,i){"use strict";i.r(t),t.default=".item.sc-ion-label-ios-h,\n.item .sc-ion-label-ios-h {\n  text-overflow: unset;\n  white-space: unset;\n  overflow: auto;\n}"}}]);