(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"8NWj":function(t,r,e){"use strict";e.r(r),r.default='<ion-header>\r\n    <ion-toolbar>\r\n        <ion-buttons slot="start">\r\n            <ion-menu-button></ion-menu-button>\r\n        </ion-buttons>\r\n        <ion-title></ion-title>\r\n    </ion-toolbar>\r\n</ion-header>\r\n<ion-content class="ion-padding">\r\n\r\n    <ion-grid [fixed]="true">\r\n        <ion-toolbar>\r\n            <ion-title color="tertiary">\r\n                <strong>{{(verifiedUserTypes?\'Update Aadhaar\':\'Aadhaar Card\') | translate}} </strong></ion-title>\r\n            <ion-buttons slot="start">\r\n                <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\r\n                    <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\r\n                </ion-button>\r\n            </ion-buttons>\r\n        </ion-toolbar>\r\n\r\n        <ion-row>\r\n            <ion-col size-md="7">\r\n                <ion-card class="ion-padding ion-no-margin" mode="ios">\r\n                    <ion-row>\r\n                        <ion-col class="ion-padding">\r\n                            <ion-text color="tertiary" class="ion-no-margin ion-padding-start">\r\n                                <h3><strong>{{(verifiedUserTypes?\'To Update Aadhaar please give your consent\':\'Get your Aadhaar by entering the required details\') | translate}}</strong>\r\n                                </h3>\r\n                            </ion-text>\r\n                        </ion-col>\r\n                    </ion-row>\r\n                    <form [formGroup]="updateForm" (ngSubmit)="submitForm()" novalidate>\r\n                        <ion-row *ngIf="!this.verifiedUserTypes">\r\n                            <ion-col size-md="3" size="12">\r\n                                <ion-item lines="none">\r\n                                    <ion-label color="dark">Aadhaar</ion-label>\r\n                                </ion-item>\r\n                            </ion-col>\r\n                            <ion-col size-md="9" size="12">\r\n                                <ion-item lines="full" mode="md">\r\n                                    <ion-input [attr.disabled]="otp" (keypress)="ajax.numberOnlyValidation($event)" maxlength="12" placeholder="" minlength="12" formControlName="aadhar" type="text" required #aadhar></ion-input>\r\n\r\n                                </ion-item>\r\n                                <small>Ex - 123456789012</small><br />\r\n                                <ion-text color="danger" *ngIf="isSubmitted && errorControl.aadhar.errors?.required">\r\n                                    Aadhaar number is required.\r\n                                </ion-text>\r\n                                <ion-text color="danger" *ngIf="isSubmitted && errorControl.aadhar.errors?.pattern">\r\n                                    Only numbers allowed.\r\n                                </ion-text>\r\n                                <ion-text color="danger" *ngIf="isSubmitted && (errorControl.aadhar.errors?.maxlength || errorControl.aadhar.errors?.minlength)">\r\n                                    Must be of 12 digit.\r\n                                </ion-text>\r\n                            </ion-col>\r\n                        </ion-row>\r\n\r\n                        <div *ngIf="otp && respMsg">\r\n                            <ion-row >\r\n                                <ion-col size-md="3" size="12">\r\n                                    <ion-item lines="none">\r\n                                        <ion-label></ion-label>\r\n\r\n                                    </ion-item>\r\n                                </ion-col>\r\n                                <ion-col size-md="9" size="12">\r\n                                    <ion-item lines="none" class="no-padding-start">\r\n                                        <ion-badge color="{{(respMsg.status==\'success\')?\'success\':\'warning\'}}" class="ion-padding ion-text-wrap" mode="ios">\r\n                                            {{(respMsg.msg!=undefined)?respMsg.msg:respMsg.error_description}}\r\n                                        </ion-badge>\r\n                                    </ion-item>\r\n                                </ion-col>\r\n                            </ion-row>\r\n                        </div>\r\n\r\n                        <ion-row *ngIf="otp">\r\n                            <ion-col size-md="3" size="12" *ngIf="otpBoxShow">\r\n                                <ion-item lines="none">\r\n                                    <ion-label color="dark">OTP</ion-label>\r\n\r\n                                </ion-item>\r\n                            </ion-col>\r\n                            <ion-col size-md="9" size="12" *ngIf="otpBoxShow">\r\n                                <ion-item lines="full" mode="md">\r\n                                    <ion-input (keypress)="ajax.numberOnlyValidation($event)" maxlength="6" minlength="6" [(ngModel)]="otpInput" formControlName="otp" type="{{otpShow?\'text\':\'password\'}}" required #otp></ion-input>\r\n                                    <ion-icon class="cursor" *ngIf="!errorControl.otp.pristine" (click)="changeType(\'otp\')" color="{{otpShow?\'primary\':\'dark\'}}" name="{{otpShow?\'eye\':\'eye-off\'}}" slot="end"></ion-icon>\r\n                                </ion-item>\r\n                                <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.required">\r\n                                    OTP is required.\r\n                                </ion-text>\r\n                                <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.pattern">\r\n                                    Only numerical values allowed.\r\n                                </ion-text>\r\n                                <ion-text color="danger" *ngIf="otp && isSubmitted && (errorControl.otp.errors?.maxlength || errorControl.consent.errors?.minlength)">\r\n                                    OTP be of 6 digit.\r\n                                </ion-text>\r\n                            </ion-col>\r\n                        </ion-row>\r\n                        <ion-row *ngIf="otp">\r\n                            <ion-col [class]="(otpBoxShow)?\'\':\'ion-text-center\'">\r\n                                <ion-text  color="{{maxTime?\'dark\':\'primary\'}}">\r\n                                    {{(maxTime>0)?\'Try resend otp after \'+maxTime+\' second\':\'\'}}\r\n\r\n                                </ion-text>\r\n                                <ion-text *ngIf="!maxTime && otp" (click)="resendOtp()" type="submit" fill="clear" size="small" class="cursor" color="primary">Resend OTP</ion-text>\r\n                            </ion-col>\r\n                        </ion-row>\r\n\r\n                        <ion-row *ngIf="!otp">\r\n                            <ion-col>\r\n                                <ion-list mode="md">\r\n                                    <ion-item lines="none">\r\n                                        <ion-text> I give my consent to DigiLocker to use my Aadhaar number & OTP to fetch my e-KYC details from UIDAI for availing services through it.</ion-text>\r\n                                        <ion-checkbox slot="start" [checked]="otp" [attr.disabled]="otp" mode="ios" (ionChange)="onTermsChecked()" formControlName="consent" required></ion-checkbox>\r\n\r\n                                    </ion-item>\r\n                                </ion-list>\r\n                                <ion-text class="ion-padding-start" color="danger" *ngIf="isSubmitted && errorControl.consent.errors?.required">\r\n                                    {{"ConsentError" | translate}}\r\n                                </ion-text>\r\n                            </ion-col>\r\n                        </ion-row>\r\n                        <ion-row *ngIf="otpBoxShow">\r\n                            <ion-col>\r\n                                <ion-button type="submit" color="primary" class="ion-float-right">{{"Update" | translate}} </ion-button>\r\n                            </ion-col>\r\n                        </ion-row>\r\n\r\n                    </form>\r\n                </ion-card>\r\n            </ion-col>\r\n        </ion-row>\r\n    </ion-grid>\r\n\r\n</ion-content>'},"a/UP":function(t,r,e){"use strict";e.r(r),r.default=""},gYfu:function(t,r,e){"use strict";e.r(r),e.d(r,"UpdateAadharPageModule",(function(){return f}));var o=e("mrSG"),n=e("fXoL"),i=e("ofXK"),s=e("3Pt+"),a=e("TEn/"),l=e("tyNb"),d=e("9ans"),h=e("AytR"),p=e("sRcL"),u=e("jhN1");let c=class{constructor(t,r,e,o,n,i){this.navCtlr=t,this.formBuilder=r,this.ajax=e,this.alertCtrl=o,this.auth=n,this.titleService=i,this.isSubmitted=!1,this.otp=!1,this.respMsg=null,this.validationArray={},this.verifiedUserTypes=this.auth.isVerified(),this.otpShow=!1,this.maxTime=120,this.otpBoxShow=!0,this.otpInput=""}ngAfterViewChecked(){this.updateForm.controls.aadhar.valid||this.aadharElement.setFocus(),this.updateForm.controls.otp.valid||this.otpElement.setFocus()}ionViewDidEnter(){this.titleService.setTitle("Aadhaar Card")}ngOnInit(){this.validationArray.aadhar=[{value:null,disabled:!1},this.verifiedUserTypes?[]:[s.f.required,s.f.pattern("[0-9? ]+$"),s.f.maxLength(12),s.f.minLength(12)]],this.validationArray.consent=[{value:null,disabled:!1},[s.f.required]],this.validationArray.otp=[{value:null,disabled:!1},[]],this.updateForm=this.formBuilder.group(this.validationArray)}changeType(t){this.otpShow=!this.otpShow}get errorControl(){return this.updateForm.controls}submitForm(){if(this.isSubmitted=!0,this.respMsg=null,!this.updateForm.valid)return!1;{this.ajax.showLoader("");let t=this.verifiedUserTypes?"":"&uid="+this.updateForm.get("aadhar").value,r=this.updateForm.get("consent").value?"Y":"N",e=this.updateForm.value.otp?h.a.aadharProfileVerifyOtp:h.a.aadharProfileOtp,o=this.updateForm.value.otp?encodeURI("&consent="+r+t+"&otp="+this.updateForm.value.otp):encodeURI("&consent="+r+t);this.ajax.postMethod(e,o,{}).subscribe(t=>{if(this.ajax.hideLoader(),"error"==t.status&&this.ajax.showToast(t.error_description,5e3,"danger","bottom"),null!=t.status)if(this.respMsg=t,"success"==t.status)this.isSubmitted=!1,this.otp=!0,this.otpBoxShow=!0,this.updateForm.value.otp?(null!=this.respMsg.msg?this.ajax.showToast(this.respMsg.msg,5e3,"success","bottom"):this.ajax.showToast("Aadhaar updated.",5e3,"success","bottom"),this.refreshIssuedDocList(),this.dismiss()):(this.ngAfterViewChecked(),this.StartTimer(),this.validationArray.consent=[{value:this.updateForm.get("consent").value,disabled:!1},[s.f.required]],this.validationArray.aadhar=[{value:this.verifiedUserTypes?null:this.updateForm.get("aadhar").value,disabled:!1},this.verifiedUserTypes?[]:[s.f.required,s.f.pattern("[0-9? ]+$"),s.f.maxLength(12),s.f.minLength(12)]],this.validationArray.otp=["",[s.f.required,s.f.pattern("^[0-9]+$"),s.f.maxLength(6),s.f.minLength(6)]],this.updateForm=this.formBuilder.group(this.validationArray));else{["D-101","D-102","D-103","D-104","1201","1202","1203","1204","1205","102","K-956","K-200","K-545","K-955"].includes(t.code)?(this.otpBoxShow=!1,this.maxTime=0,this.isSubmitted=!0):(this.otpInput="",this.isSubmitted=!1,null!=this.respMsg.error_description||null!=this.respMsg.message||this.ajax.showToast("Server is busy please tray again later.",5e3,"warning","bottom"))}})}}refreshIssuedDocList(){this.ajax.postMethod(h.a.refreshIssuedDocList,"",{}).subscribe(t=>{null==t.status&&t.length>0&&this.auth.setProfile("issued-documents")})}resendOtp(){this.maxTime=120,this.otpInput="",this.respMsg=null,this.otpBoxShow=!0,this.updateForm.value.otp="",this.ajax.showLoader("");let t=h.a.aadharProfileOtp,r=this.verifiedUserTypes?"":"&uid="+this.updateForm.get("aadhar").value,e=this.updateForm.get("consent").value?"Y":"N",o=encodeURI("&consent="+e+r);this.ajax.postMethod(t,o,{}).subscribe(t=>{this.isSubmitted=!1,this.ajax.hideLoader(),this.respMsg=t,"success"==t.status?this.StartTimer():this.ajax.showToast(this.respMsg.error_description,3e3,"warning","bottom")})}onTermsChecked(){this.updateForm.value.consent||this.updateForm.patchValue({consent:null})}dismiss(){this.navCtlr.pop()}StartTimer(){setTimeout(t=>{this.maxTime>0&&(this.StartTimer(),this.maxTime=this.maxTime-1)},1e3)}};c.ctorParameters=()=>[{type:a.i},{type:s.a},{type:p.a},{type:a.a},{type:d.a},{type:u.d}],Object(o.c)([Object(n.nb)("aadhar")],c.prototype,"aadharElement",void 0),Object(o.c)([Object(n.nb)("otp")],c.prototype,"otpElement",void 0),c=Object(o.c)([Object(n.n)({selector:"app-update-aadhar",template:Object(o.f)(e("8NWj")).default,styles:[Object(o.f)(e("a/UP")).default]})],c);const m=[{path:"",component:c}];let g=class{};g=Object(o.c)([Object(n.M)({imports:[l.i.forChild(m)],exports:[l.i]})],g);var b=e("sYmb");let f=class{};f=Object(o.c)([Object(n.M)({imports:[i.b,s.b,s.e,a.d,g,b.b.forChild()],declarations:[c]})],f)}}]);