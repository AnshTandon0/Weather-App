(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{"1I0h":function(n,e,r){"use strict";r.r(e),e.default='\x3c!-- <ion-header>\r\n    <ion-toolbar>\r\n        <ion-button slot="start" (click)="dismiss()" size="small" color="primary" fill="clear" shape="round">\r\n            <ion-icon name="arrow-back"></ion-icon>\r\n        </ion-button>\r\n        <ion-title>Verify Email Address</ion-title>\r\n    </ion-toolbar>\r\n</ion-header> --\x3e\r\n\r\n<ion-content class="ion-padding">\r\n    <ion-grid>\r\n        <ion-toolbar>\r\n            <ion-title color="tertiary">\r\n                <h3><strong> Verify your Email address for communication </strong>\r\n                </h3>\r\n            </ion-title>\r\n            <ion-buttons slot="start">\r\n                <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\r\n                    <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\r\n                </ion-button>\r\n            </ion-buttons>\r\n        </ion-toolbar>\r\n    </ion-grid>\r\n    <form [formGroup]="verifyEmailForm" (ngSubmit)="submitForm()" novalidate>\r\n    <ion-grid>\r\n            <ion-row *ngIf="profile.email">\r\n                <ion-col size-md="4" size="12">\r\n                    <ion-item lines="none">\r\n                        <ion-label>Current Email</ion-label>\r\n                    </ion-item>\r\n                </ion-col>\r\n                <ion-col size-md="8" size="12">\r\n                    <ion-item lines="full">\r\n                        <ion-label color="medium">{{profile.email}}</ion-label>\r\n                    </ion-item>\r\n                </ion-col>\r\n            </ion-row>\r\n            <ion-row *ngIf="otp">\r\n                    <ion-col size-md="4" size="12">\r\n                        <ion-item lines="none">\r\n                            <ion-label>OTP</ion-label>\r\n                        </ion-item>\r\n                    </ion-col>\r\n                    <ion-col size-md="8" size="12">\r\n                        <ion-item lines="full">\r\n                            <ion-input (keypress)="ajax.numberOnlyValidation($event)" maxlength="6" minlength="6" formControlName="otp" type="{{otpShow?\'text\':\'password\'}}" required #otp></ion-input>\r\n                            <ion-icon class="cursor" *ngIf="!errorControl.otp.pristine" (click)="changeType(\'otp\')" color="{{otpShow?\'primary\':\'dark\'}}" name="{{otpShow?\'eye\':\'eye-off\'}}" slot="end"></ion-icon>\r\n                        </ion-item>\r\n                        <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.required ">\r\n                            OTP is required.\r\n                        </ion-text>\r\n                        <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.pattern">\r\n                            Only numerical values allowed.\r\n                        </ion-text>\r\n                        <ion-text color="danger" *ngIf="otp && isSubmitted && (errorControl.otp.errors?.maxlength || errorControl.otp.errors?.minlength)">\r\n                            OTP must be of 6 digit.\r\n                        </ion-text>\r\n                        <br />\r\n\r\n                        <ion-text *ngIf="otp">\r\n                            {{(maxTime>0)?\'Wait for the OTP, if not received try resend otp after  \'+maxTime+\' second\':\'\'}}\r\n                            <ion-text *ngIf="maxTime==0" (click)="resendOtp()" type="submit" fill="clear" size="small" class="cursor" color="primary">Resend OTP</ion-text>\r\n                        </ion-text>\r\n                    </ion-col>\r\n                </ion-row>\r\n                \r\n            <ion-row *ngIf="!otp">\r\n                <ion-col>\r\n                    <ion-list>\r\n                        <ion-item lines="none">\r\n                            <ion-text> I provide my consent to DigiLocker.</ion-text>\r\n                            <ion-checkbox slot="start" [attr.disabled]="otp" [checked]="false" formControlName="consent" (ionChange)="onTermsChecked()" required></ion-checkbox>\r\n                        </ion-item>\r\n                    </ion-list>\r\n                    <ion-label color="danger" *ngIf="isSubmitted && errorControl.consent.errors?.required">\r\n                        Consent is required.\r\n                    </ion-label>\r\n                </ion-col>\r\n            </ion-row>\r\n            <ion-row>\r\n                <ion-col>\r\n                    <ion-button type="submit" color="primary" class="ion-float-right">Submit</ion-button>\r\n                </ion-col>\r\n            </ion-row>\r\n            <ion-item lines="none" class="no-padding-start">\r\n                <ion-badge color="{{(respMsg.status==\'success\')?\'success\':\'danger\'}}" *ngIf="respMsg" class="ion-padding">\r\n                    {{(respMsg.status==\'success\')?respMsg.msg:respMsg.error_description}}\r\n                </ion-badge>\r\n            </ion-item>\r\n    </ion-grid>\r\n    </form>\r\n\r\n</ion-content>\r\n'},"5gva":function(n,e,r){"use strict";r.r(e),e.default=""},"74mu":function(n,e,r){"use strict";r.d(e,"a",(function(){return t})),r.d(e,"b",(function(){return i})),r.d(e,"c",(function(){return o})),r.d(e,"d",(function(){return a}));const o=(n,e)=>null!==e.closest(n),t=(n,e)=>"string"==typeof n&&n.length>0?Object.assign({"ion-color":!0,["ion-color-"+n]:!0},e):e,i=n=>{const e={};return(n=>{if(void 0!==n){return(Array.isArray(n)?n:n.split(" ")).filter(n=>null!=n).map(n=>n.trim()).filter(n=>""!==n)}return[]})(n).forEach(n=>e[n]=!0),e},s=/^[a-z][a-z0-9+\-.]*:/,a=async(n,e,r,o)=>{if(null!=n&&"#"!==n[0]&&!s.test(n)){const t=document.querySelector("ion-router");if(t)return null!=e&&e.preventDefault(),t.push(n,r,o)}return!1}},"85Y/":function(n,e,r){"use strict";r.r(e),e.default='\x3c!-- <ion-header>\r\n    <ion-toolbar>\r\n        <ion-button slot="start" (click)="dismiss()" size="small" color="primary" fill="clear" shape="round" shape="round">\r\n            <ion-icon name="arrow-back"></ion-icon>\r\n        </ion-button>\r\n        <ion-title>Reset PIN</ion-title>\r\n    </ion-toolbar>\r\n</ion-header> --\x3e\r\n\r\n<ion-content class="ion-padding">\r\n    <ion-grid>\r\n        <ion-toolbar>\r\n            <ion-title color="tertiary" *ngIf="deviceSize">\r\n                <strong> {{"PINHeader" | translate}} </strong>\r\n            </ion-title>\r\n            <ion-text color="tertiary" *ngIf="!deviceSize">\r\n                <strong> {{"PINHeader" | translate}} </strong>\r\n            </ion-text>\r\n            <ion-buttons slot="start">\r\n                <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\r\n                    <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\r\n                </ion-button>\r\n            </ion-buttons>\r\n        </ion-toolbar>\r\n\r\n        <form [formGroup]="updateForm" (ngSubmit)="submitForm()" novalidate>\r\n            <ion-row>\r\n                <ion-col size-md="3" size="12">\r\n                    <ion-item lines="none">\r\n                        <ion-label>{{"Current" | translate}} {{"PIN" | translate}}</ion-label>\r\n                    </ion-item>\r\n                </ion-col>\r\n                <ion-col size-md="9" size="12">\r\n                    <ion-item lines="full">\r\n                        <ion-input  autocomplete="off" (keypress)="ajax.numberOnlyValidation($event)" maxlength="6" minlength="6" formControlName="pin" type="{{pinShow?\'text\':\'password\'}}" required #pin></ion-input>\r\n                        <ion-icon class="cursor" *ngIf="!errorControl.pin.pristine" (click)="changeType(\'pin\')" color="{{pinShow?\'primary\':\'dark\'}}" name="{{pinShow?\'eye\':\'eye-off\'}}" slot="end"></ion-icon>\r\n                    </ion-item>\r\n                    <ion-label color="danger" *ngIf="isSubmitted && errorControl.pin.errors?.required">\r\n                        {{"Old" | translate}} {{"PIN" | translate}} {{"Req" | translate}}\r\n                    </ion-label>\r\n                    <ion-label color="danger" *ngIf="isSubmitted && errorControl.pin.errors?.pattern">\r\n                        {{"OnlyNumbers" | translate}}\r\n                    </ion-label>\r\n                    <ion-label color="danger" *ngIf="isSubmitted && (errorControl.pin.errors?.maxlength || errorControl.pin.errors?.minlength)">\r\n                        {{"PINLength" | translate}}\r\n                    </ion-label>\r\n\r\n                </ion-col>\r\n            </ion-row>\r\n\r\n            <ion-row>\r\n                <ion-col size-md="3" size="12">\r\n                    <ion-item lines="none">\r\n                        <ion-label>{{"New" | translate}} {{"PIN" | translate}}</ion-label>\r\n                    </ion-item>\r\n                </ion-col>\r\n                <ion-col size-md="9" size="12">\r\n                    <ion-item lines="full">\r\n                        <ion-input (keypress)="ajax.numberOnlyValidation($event)" maxlength="6" minlength="6" formControlName="cpin" type="{{cpinShow?\'text\':\'password\'}}" required></ion-input>\r\n                        <ion-icon class="cursor" *ngIf="!errorControl.cpin.pristine" (click)="changeType(\'cpin\')" color="{{cpinShow?\'primary\':\'dark\'}}" name="{{cpinShow?\'eye\':\'eye-off\'}}" slot="end"></ion-icon>\r\n                    </ion-item>\r\n                    <ion-label color="danger" *ngIf="isSubmitted && errorControl.cpin.errors?.required">\r\n                        {{"New" | translate}} {{"PIN" | translate}} {{"Req" | translate}}\r\n                    </ion-label>\r\n                    <ion-label color="danger" *ngIf="isSubmitted && errorControl.cpin.errors?.pattern">\r\n                        {{"OnlyNumbers" | translate}}\r\n                    </ion-label>\r\n                    <ion-label color="danger" *ngIf="errorControl.cpin.errors?.confirmedValidator">\r\n                        {{"PINSame" | translate}}\r\n                    </ion-label>\r\n                    <ion-label color="danger" *ngIf="isSubmitted && (errorControl.cpin.errors?.maxlength || errorControl.cpin.errors?.miinlength)">\r\n                        {{"PINLength" | translate}}\r\n                    </ion-label>\r\n                </ion-col>\r\n            </ion-row>\r\n\r\n\r\n            <ion-row class="mt-4">\r\n                <ion-col>\r\n                    <ion-button class="ion-float-right" type="submit" color="primary">{{"Set" | translate}} {{"PIN" | translate}}</ion-button>\r\n                </ion-col>\r\n            </ion-row>\r\n\r\n            <ion-label color="{{(respMsg.status==\'success\')?\'primary\':\'danger\'}}" *ngIf="respMsg">\r\n                {{(respMsg.status==\'success\')?respMsg.msg:respMsg.error_description}}\r\n            </ion-label>\r\n\r\n        </form>\r\n\r\n    </ion-grid>\r\n</ion-content>'},"9DET":function(n,e,r){"use strict";r.r(e),e.default='\x3c!-- <ion-header>\r\n    <ion-toolbar>\r\n        <ion-button slot="start" (click)="dismiss()" size="small" color="primary" fill="clear" shape="round">\r\n            <ion-icon name="arrow-back"></ion-icon>\r\n        </ion-button>\r\n        <ion-title>Update Mobile Number</ion-title>\r\n    </ion-toolbar>\r\n</ion-header> --\x3e\r\n\r\n<ion-content class="ion-padding">\r\n    <ion-grid>\r\n        <ion-toolbar>\r\n            <ion-title color="tertiary" *ngIf="deviceSize">\r\n                <strong> {{(profile.mobile?\'Update your mobile number for communication\':\'Add your mobile number for communication\')  | translate}} </strong>\r\n            </ion-title>\r\n            <ion-text color="tertiary" *ngIf="!deviceSize">\r\n                <strong>{{(profile.mobile?\'Update your mobile number for communication\':\'Add your mobile number for communication\')  | translate}} </strong>\r\n            </ion-text>\r\n            <ion-buttons slot="start">\r\n                <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\r\n                    <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\r\n                </ion-button>\r\n            </ion-buttons>\r\n        </ion-toolbar>\r\n\r\n\r\n        <ion-row *ngIf="profile" mode="ios">\r\n            <ion-col class="ion-no-padding">\r\n                <ion-row *ngIf="profile.mobile">\r\n                    <ion-col size-md="4" size="12" class="ion-no-padding" *ngIf="deviceSize">\r\n                        <ion-item lines="none">\r\n                            <ion-label>{{"Current" | translate}} {{"Mobile" | translate}}</ion-label>\r\n                        </ion-item>\r\n                    </ion-col>\r\n                    <ion-col size-md="8" size="12" class="ion-no-padding">\r\n\r\n                        <ion-item lines="none">\r\n\r\n                            <ion-label color="medium"> <span *ngIf="!deviceSize">{{"Current" | translate}} {{"Mobile" | translate}} <br></span> {{profile.mobile}}\r\n                            </ion-label>\r\n\r\n                        </ion-item>\r\n                    </ion-col>\r\n                </ion-row>\r\n\r\n                <form [formGroup]="updateForm" (ngSubmit)="submitForm()" novalidate>\r\n                    <ion-row>\r\n                        <ion-col size-md="4" size="12" *ngIf="deviceSize">\r\n                            <ion-item lines="none">\r\n                                <ion-label>{{(profile.mobile?\'New\':\'\') | translate}} {{"Mobile" | translate}}</ion-label>\r\n                            </ion-item>\r\n                        </ion-col>\r\n                        <ion-col size-md="8" size="12">\r\n                            <ion-item lines="full" mode="md">\r\n                                <ion-label position="floating" *ngIf="!deviceSize">{{(profile.mobile?\'New\':\'\') | translate}} {{"Mobile" | translate}}</ion-label>\r\n                                <ion-input (keypress)="ajax.numberOnlyValidation($event)" [disabled]="otp" maxlength="10" minlength="10" formControlName="mobile" type="text" required #mobile></ion-input>\r\n                            </ion-item>\r\n                            <p *ngIf="isSubmitted && errorControl.mobile.errors?.required">\r\n                                <ion-text color="danger" class="ion-margin">\r\n                                    {{"Mobile" | translate}} {{"Req" | translate}}\r\n                                </ion-text>\r\n                            </p>\r\n                            <ion-text color="danger" *ngIf="isSubmitted && errorControl.mobile.errors?.pattern">\r\n                                Please enter a valid number\r\n                            </ion-text>\r\n                            <ion-text color="danger" *ngIf="isSubmitted && (errorControl.mobile.errors?.maxlength || errorControl.mobile.errors?.minlength)">\r\n                                {{"MobileLength" | translate}}\r\n                            </ion-text>\r\n                            <ion-text color="danger" *ngIf="errorControl.mobile.errors?.notequalto">\r\n                                {{"Current and new mobile is same." | translate}}\r\n                            </ion-text>\r\n                        </ion-col>\r\n                    </ion-row>\r\n\r\n                    <ion-row *ngIf="otp">\r\n                        <ion-col size-md="4" size="12">\r\n                            <ion-item lines="none">\r\n                                <ion-label></ion-label>\r\n                            </ion-item>\r\n                        </ion-col>\r\n                        <ion-col size-md="8" size="12">\r\n                            <ion-item lines="none" class="ion-no-padding-start">\r\n                                <ion-badge color="{{(respMsg.status==\'success\')?\'success\':\'danger\'}}" *ngIf="respMsg" class="ion-padding ion-text-wrap ion-no-margin-start">\r\n                                    {{(respMsg.status==\'success\')?respMsg.msg:respMsg.error_description}}\r\n                                </ion-badge>\r\n                            </ion-item>\r\n                        </ion-col>\r\n                    </ion-row>\r\n\r\n                    <ion-row *ngIf="otp">\r\n                        <ion-col size-md="4" size="12">\r\n                            <ion-item lines="none">\r\n                                <ion-label>OTP</ion-label>\r\n                            </ion-item>\r\n                        </ion-col>\r\n                        <ion-col size-md="8" size="12">\r\n                            <ion-item lines="full" mode="ios">\r\n                                <ion-input (keypress)="ajax.numberOnlyValidation($event)" maxlength="6" minlength="6" [(ngModel)]="otpInput" formControlName="otp" type="{{otpShow?\'text\':\'password\'}}" required #otp></ion-input>\r\n                                <ion-icon class="cursor" *ngIf="!errorControl.otp.pristine" (click)="changeType(\'otp\')" color="{{otpShow?\'primary\':\'dark\'}}" name="{{otpShow?\'eye\':\'eye-off\'}}" slot="end"></ion-icon>\r\n                            </ion-item>\r\n                            <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.required">\r\n                                OTP is required.\r\n                            </ion-text>\r\n                            <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.pattern">\r\n                                Only numerical values allowed.\r\n                            </ion-text>\r\n                            <ion-text color="danger" *ngIf="otp && isSubmitted && (errorControl.otp.errors?.maxlength || errorControl.mobile.errors?.minlength)">\r\n                                OTP be of 6 digit.\r\n                            </ion-text>\r\n                            <br />\r\n\r\n                            <ion-text *ngIf="otp" color="{{maxTime?\'dark\':\'primary\'}}">\r\n                                {{(maxTime>0)?\'Wait for the OTP, if not received try resend otp after \'+maxTime+\' seconds\':\'\'}}\r\n\r\n                            </ion-text>\r\n                            <ion-text *ngIf="!maxTime && otp" (click)="resendOtp()" type="submit" fill="clear" size="small" class="cursor" color="primary">Resend OTP</ion-text>\r\n                        </ion-col>\r\n                    </ion-row>\r\n\r\n\r\n                    <ion-row>\r\n                        <ion-col>\r\n                            <ion-label class="ion-text-right">\r\n                                <ion-button class="ion-float-right" type="submit" color="primary" expand="block">{{"Submit" | translate}}</ion-button>\r\n                            </ion-label>\r\n                        </ion-col>\r\n                    </ion-row>\r\n                    <ion-row>\r\n                        <ion-col>\r\n\r\n                        </ion-col>\r\n                    </ion-row>\r\n                </form>\r\n            </ion-col>\r\n        </ion-row>\r\n    </ion-grid>\r\n\r\n</ion-content>\r\n'},CapT:function(n,e,r){"use strict";r.d(e,"a",(function(){return s}));var o=r("mrSG"),t=r("fXoL"),i=r("TEn/");let s=class{constructor(n){this.modalController=n}ngOnInit(){}dismiss(){this.modalController.dismiss({dismissed:!0})}};s.ctorParameters=()=>[{type:i.h}],s=Object(o.c)([Object(t.n)({selector:"app-view-nominee",template:Object(o.f)(r("DueQ")).default,styles:[Object(o.f)(r("m/4U")).default]})],s)},DMre:function(n,e,r){"use strict";r.d(e,"a",(function(){return d}));var o=r("mrSG"),t=r("fXoL"),i=r("TEn/"),s=r("3Pt+"),a=r("AytR"),l=r("sRcL");let d=class{constructor(n,e,r,o){this.modalController=n,this.formBuilder=e,this.ajax=r,this.navparam=o,this.profile=this.navparam.get("profile"),this.isSubmitted=!1,this.respMsg=null,this.otp=!1,this.otpShow=!1,this.maxTime=30}ngOnInit(){this.verifyEmailForm=this.formBuilder.group({consent:[null,s.f.required],otp:[null,[]]})}ngAfterViewChecked(){this.otp&&this.otpElement.setFocus()}get errorControl(){return this.verifyEmailForm.controls}onTermsChecked(){this.verifyEmailForm.value.consent||this.verifyEmailForm.patchValue({consent:null})}changeType(n){this.otpShow=!this.otpShow}submitForm(){if(this.isSubmitted=!0,this.respMsg=null,!this.verifyEmailForm.valid)return!1;{this.verifyEmailForm.value.consent;this.respMsg=null,this.ajax.showLoader();let n=this.verifyEmailForm.get("otp").value?a.a.emailupdate_verify_otp:a.a.emailupdate_send_otp,e=this.verifyEmailForm.get("otp").value?encodeURI("email="+this.profile.email+"&otp="+this.verifyEmailForm.get("otp").value):encodeURI("email="+this.profile.email);this.ajax.postMethod(n,e,{}).subscribe(n=>{this.ajax.hideLoader(),this.isSubmitted=!1,this.respMsg=n,"success"==n.status&&(this.respMsg.msg="OTP sent to your e-mail .",this.otp=!0,this.verifyEmailForm.get("otp").value?(this.ajax.showToast("Email verified successfully.",3e3,"success","bottom"),this.dismiss(!0)):(this.otp=this.verifyEmailForm.value.consent,this.StartTimer(),this.ngAfterViewChecked(),this.verifyEmailForm=this.formBuilder.group({consent:[this.verifyEmailForm.value.consent,s.f.required],otp:[null,[s.f.required,s.f.pattern("^[0-9]+$"),s.f.maxLength(6),s.f.minLength(6)]]})))})}}resendOtp(){if(this.respMsg=null,this.verifyEmailForm.value.otp="",!this.profile.email)return!1;{this.ajax.showLoader();let n=a.a.emailupdate_send_otp,e=encodeURI("email="+this.profile.email);this.ajax.postMethod(n,e,{}).subscribe(n=>{this.ajax.hideLoader(),this.respMsg=n,"success"==n.status&&(this.StartTimer(),this.respMsg.msg="OTP re-sent to your e-mail .")})}}StartTimer(){setTimeout(n=>{this.maxTime>0&&(this.StartTimer(),this.maxTime=this.maxTime-1)},1e3)}dismiss(n=!1){this.modalController.dismiss({dismissed:n})}};d.ctorParameters=()=>[{type:i.h},{type:s.a},{type:l.a},{type:i.j}],Object(o.c)([Object(t.nb)("otp")],d.prototype,"otpElement",void 0),d=Object(o.c)([Object(t.n)({selector:"app-verify-email",template:Object(o.f)(r("1I0h")).default,styles:[Object(o.f)(r("vEKE")).default]})],d)},Dq3m:function(n,e,r){"use strict";r.d(e,"a",(function(){return i}));var o=r("mrSG"),t=r("fXoL");let i=class{constructor(n){this.renderer=n,this.expanded=!1,this.expandHeight="150px"}ngAfterViewInit(){this.renderer.setStyle(this.expandWrapper.nativeElement,"max-height",this.expandHeight)}};i.ctorParameters=()=>[{type:t.Z}],Object(o.c)([Object(t.nb)("expandWrapper",{read:t.v})],i.prototype,"expandWrapper",void 0),Object(o.c)([Object(t.H)("expanded")],i.prototype,"expanded",void 0),Object(o.c)([Object(t.H)("expandHeight")],i.prototype,"expandHeight",void 0),i=Object(o.c)([Object(t.n)({selector:"app-expandable",template:Object(o.f)(r("pCm6")).default,styles:[Object(o.f)(r("lSO4")).default]})],i)},DueQ:function(n,e,r){"use strict";r.r(e),e.default='\x3c!-- <ion-header>\r\n  <ion-toolbar>\r\n    <ion-button slot="start" (click)="dismiss()" size="small" color="primary" fill="clear" shape="round"><ion-icon name="arrow-back"></ion-icon></ion-button>\r\n    <ion-title>Nominee details</ion-title>\r\n  </ion-toolbar>\r\n</ion-header> --\x3e\r\n\r\n<ion-content class="ion-padding">\r\n    <ion-grid>\r\n        <ion-toolbar>\r\n            <ion-title color="tertiary">\r\n                <strong> Nominee details </strong>\r\n                \r\n            </ion-title>\r\n            <ion-buttons slot="start">\r\n                <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\r\n                    <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\r\n                </ion-button>\r\n            </ion-buttons>\r\n        </ion-toolbar>\r\n\r\n        <ion-row>\r\n            <ion-col>\r\n                <ion-item>\r\n                    <ion-col size="4">\r\n                        <ion-label>Name</ion-label>\r\n                    </ion-col>\r\n                    <ion-col size="1">\r\n                        <ion-label>:</ion-label>\r\n                    </ion-col>\r\n                    <ion-col size="7">\r\n                        <ion-label *ngIf="nominee" class="ion-text-capitalize">{{nominee.name}}</ion-label>\r\n                        <ion-skeleton-text *ngIf="!nominee" animated style="width: 50%"></ion-skeleton-text>\r\n                    </ion-col>\r\n                </ion-item>\r\n                <ion-item>\r\n                    <ion-col size="4">\r\n                        <ion-label>Date of Birth</ion-label>\r\n                    </ion-col>\r\n                    <ion-col size="1">\r\n                        <ion-label>:</ion-label>\r\n                    </ion-col>\r\n                    <ion-col size="7">\r\n                        <ion-label *ngIf="nominee">{{nominee.dob | date : "dd-MM-YYYY"}}</ion-label>\r\n                        <ion-skeleton-text *ngIf="!nominee" animated style="width: 50%"></ion-skeleton-text>\r\n                    </ion-col>\r\n                </ion-item>\r\n                <ion-item>\r\n                    <ion-col size="4">\r\n                        <ion-label>Gender</ion-label>\r\n                    </ion-col>\r\n                    <ion-col size="1">\r\n                        <ion-label>:</ion-label>\r\n                    </ion-col>\r\n                    <ion-col size="7">\r\n                        <ion-label *ngIf="nominee" class="ion-text-capitalize">{{(nominee.gender==\'M\')?\'Male\':(nominee.gender==\'F\')?\'Female\':\'Other\'}}</ion-label>\r\n                        <ion-skeleton-text *ngIf="!nominee" animated style="width: 50%"></ion-skeleton-text>\r\n                    </ion-col>\r\n                </ion-item>\r\n                <ion-item>\r\n                    <ion-col size="4">\r\n                        <ion-label>Relationship</ion-label>\r\n                    </ion-col>\r\n                    <ion-col size="1">\r\n                        <ion-label>:</ion-label>\r\n                    </ion-col>\r\n                    <ion-col size="7">\r\n                        <ion-label *ngIf="nominee" class="ion-text-capitalize">{{nominee.relation}}</ion-label>\r\n                        <ion-skeleton-text *ngIf="!nominee" animated style="width: 50%"></ion-skeleton-text>\r\n                    </ion-col>\r\n                </ion-item>\r\n                <ion-item>\r\n                    <ion-col size="4">\r\n                        <ion-label>Mobile</ion-label>\r\n                    </ion-col>\r\n                    <ion-col size="1">\r\n                        <ion-label>:</ion-label>\r\n                    </ion-col>\r\n                    <ion-col size="7">\r\n                        <ion-label *ngIf="nominee">{{nominee.mobileno}}</ion-label>\r\n                        <ion-skeleton-text *ngIf="!nominee" animated style="width: 50%"></ion-skeleton-text>\r\n                    </ion-col>\r\n                </ion-item>\r\n            </ion-col>\r\n        </ion-row>\r\n    </ion-grid>\r\n</ion-content>'},FfG1:function(n,e,r){"use strict";r.r(e),e.default=""},GG96:function(n,e,r){"use strict";r.r(e),e.default="<div *ngFor=\"let label of labels | keyvalue\">\r\n    <ion-item *ngIf=\"label.value\" class=\"cursor\" (click)=\"close(label.value)\" lines=\"full\">\r\n        <ion-label class=\"\"> <small>{{label.value}} </small></ion-label>\r\n        <ion-icon name=\"{{(label.value=='REFRESH')?'refresh-outline':(label.value=='DELETE')?'trash-outline':(label.value=='PDF')?'document-outline':(label.value=='XML')?'code-slash-outline':(label.value=='JSON')?'terminal-outline':''}}\" slot=\"start\" size=\"small\"></ion-icon>\r\n    </ion-item>\r\n</div>"},JbSX:function(n,e,r){"use strict";r.d(e,"a",(function(){return s}));var o=r("wEJo"),t=r("qULd"),i=r("iWo5");const s=(n,e)=>{let r,s;const a=(n,o,t)=>{if("undefined"==typeof document)return;const i=document.elementFromPoint(n,o);i&&e(i)?i!==r&&(d(),l(i,t)):d()},l=(n,e)=>{r=n,s||(s=r);const t=r;Object(o.f)(()=>t.classList.add("ion-activated")),e()},d=(n=!1)=>{if(!r)return;const e=r;Object(o.f)(()=>e.classList.remove("ion-activated")),n&&s!==r&&r.click(),r=void 0};return Object(i.createGesture)({el:n,gestureName:"buttonActiveDrag",threshold:0,onStart:n=>a(n.currentX,n.currentY,t.a),onMove:n=>a(n.currentX,n.currentY,t.b),onEnd:()=>{d(!0),Object(t.e)(),s=void 0}})}},QTN7:function(n,e,r){"use strict";r.r(e),e.default="h3 {\n  margin-bottom: 0px;\n}"},RU3n:function(n,e,r){"use strict";r.r(e),e.default='<ion-content class="ion-padding">\r\n    <ion-toolbar>\r\n        <ion-title color="tertiary">\r\n            <strong>{{"UpdateProfile" | translate}}</strong></ion-title>\r\n        <ion-buttons slot="start">\r\n            <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\r\n                <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\r\n            </ion-button>\r\n        </ion-buttons>\r\n    </ion-toolbar>\r\n\r\n    <ion-grid>\r\n        <ion-row>\r\n            <ion-col>\r\n                <form [formGroup]="updateProfileForm" (ngSubmit)="submitForm()" novalidate>\r\n                    <ion-row>\r\n                        <ion-col size-md="3" size="12">\r\n                            <ion-item lines="none">\r\n                                <ion-label>{{"Name" | translate}}</ion-label>\r\n                            </ion-item>\r\n                        </ion-col>\r\n                        <ion-col size-md="9" size="12">\r\n                            <ion-item lines="full">\r\n                                <ion-input (keypress)="ajax.nameValidation($event)" formControlName="name" type="text" required></ion-input>\r\n                            </ion-item>\r\n                            <ion-text color="danger" *ngIf="isSubmitted && errorControl.name.errors?.required">\r\n                                Name is required.\r\n                            </ion-text>\r\n                            <ion-text color="danger" *ngIf="isSubmitted && errorControl.name.errors?.pattern">\r\n                                Only alphabets and space values allowed.\r\n                            </ion-text>\r\n                        </ion-col>\r\n                    </ion-row>\r\n\r\n                    <ion-row>\r\n                        <ion-col size-md="3" size="12">\r\n                            <ion-item lines="none">\r\n                                <ion-label>{{"DOB_Full" | translate}}</ion-label>\r\n                            </ion-item>\r\n                        </ion-col>\r\n                        <ion-col size-md="9" size="12">\r\n                            <ion-item lines="full">\r\n                                <ion-input [min]="minDate" [max]="maxDate" displayFormat="DD MMMM YYYY" (ionChange)="getDate($event)" formControlName="dob" type="date" placeholder="" required></ion-input>\r\n                            </ion-item>\r\n                            <ion-text color="danger" *ngIf="isSubmitted && errorControl.dob.errors?.required">\r\n                                Date of birth is required.\r\n                            </ion-text>\r\n                            <ion-text color="danger" *ngIf="errorControl.dob.errors?.dobValidator">\r\n                                Date of birth not valid.\r\n                            </ion-text>\r\n                        </ion-col>\r\n                    </ion-row>\r\n\r\n                    <ion-row>\r\n                        <ion-col size-md="3" size="12">\r\n                            <ion-item lines="none">\r\n                                <ion-label>{{"Gender" | translate}} </ion-label>\r\n                            </ion-item>\r\n                        </ion-col>\r\n                        <ion-col size-md="9" size="12">\r\n                            <ion-radio-group value="Gender" formControlName="gender" required>\r\n                                <ion-row>\r\n                                    <ion-col class="ion-no-padding-start ion-no-margin-start">\r\n                                        <ion-item lines="none">\r\n                                            <ion-label>{{"Male" | translate}}</ion-label>\r\n                                            <ion-radio slot="start" value="M"></ion-radio>\r\n                                        </ion-item>\r\n                                    </ion-col>\r\n                                    <ion-col>\r\n                                        <ion-item lines="none">\r\n                                            <ion-label>{{"Female" | translate}}</ion-label>\r\n                                            <ion-radio slot="start" value="F"></ion-radio>\r\n                                        </ion-item>\r\n                                    </ion-col>\r\n                                    <ion-col>\r\n                                        <ion-item lines="none">\r\n                                            <ion-label>{{"Other" | translate}}</ion-label>\r\n                                            <ion-radio slot="start" value="O"></ion-radio>\r\n                                        </ion-item>\r\n                                    </ion-col>\r\n                                </ion-row>\r\n                            </ion-radio-group>\r\n                            <ion-text color="danger" *ngIf="isSubmitted && errorControl.gender.errors?.required">\r\n                                Gender is required.\r\n                            </ion-text>\r\n                        </ion-col>\r\n                    </ion-row>\r\n\r\n\r\n\r\n                    <ion-row>\r\n                        <ion-col class="ion-text-end">\r\n                            <ion-button type="submit" color="primary">{{"Update" | translate}}</ion-button>\r\n                        </ion-col>\r\n                    </ion-row>\r\n\r\n                </form>\r\n            </ion-col>\r\n        </ion-row>\r\n    </ion-grid>\r\n    <ion-grid>\r\n        <ion-row>\r\n            <ion-col>\r\n                <ion-label color="{{(respMsg.status==\'success\')?\'primary\':\'danger\'}}" *ngIf="respMsg">\r\n                    {{(respMsg.status==\'success\')?respMsg.msg:respMsg.error_description}}\r\n                </ion-label>\r\n            </ion-col>\r\n        </ion-row>\r\n    </ion-grid>\r\n</ion-content>'},TGoH:function(n,e,r){"use strict";r.r(e),e.default=".cursor {\n  cursor: pointer;\n}"},WAqu:function(n,e,r){"use strict";r.d(e,"a",(function(){return d}));var o=r("mrSG"),t=r("fXoL"),i=r("TEn/"),s=r("3Pt+"),a=r("AytR"),l=r("sRcL");let d=class{constructor(n,e,r,o,t,i){this.modalController=n,this.formBuilder=e,this.ajax=r,this.navCtrl=o,this.navparam=t,this.platform=i,this.deviceSize=this.platform.isLandscape(),this.isSubmitted=!1,this.otpInput="",this.otp=!1,this.maxTime=30,this.respMsg=null,this.otpShow=!1,this.profile=this.navparam.get("profile")}ngAfterViewChecked(){this.updateForm.controls.mobile.valid||this.mobileElement.setFocus(),this.updateForm.controls.otp.valid||this.otpElement.setFocus()}ngOnInit(){this.validationArray={mobile:[{value:"",disabled:!1},[s.f.required,s.f.pattern("^[5-9]{1}[0-9]{9}$"),s.f.maxLength(10),s.f.minLength(10)]],otp:[{value:"",disabled:!1},[]]},this.updateForm=this.formBuilder.group(this.validationArray,{validator:this.ConfirmedValidator("mobile")})}changeType(n){this.otpShow=!this.otpShow}ConfirmedValidator(n){return e=>{const r=this.profile.mobile,o=e.controls[n];o.errors&&!o.errors.notequalto||(r!==o.value?o.setErrors(null):o.setErrors({notequalto:!0}))}}get errorControl(){return this.updateForm.controls}submitForm(){if(this.isSubmitted=!0,!this.updateForm.valid)return!1;{this.respMsg=null,this.ajax.showLoader("");let n=this.updateForm.value.otp?a.a.mobileupdate_verify_otp:a.a.mobileupdate_send_otp,e=this.updateForm.value.otp?encodeURI("mobile="+this.updateForm.get("mobile").value+"&otp="+this.updateForm.get("otp").value):encodeURI("mobile="+this.updateForm.get("mobile").value);this.ajax.postMethod(n,e,{}).subscribe(n=>{this.isSubmitted=!1,this.ajax.hideLoader(),this.respMsg=n,"success"==n.status?(this.respMsg=n,this.ngAfterViewChecked(),this.otp=!0,this.StartTimer(),this.updateForm.value.otp?(n.msg="Mobile number updated successfully.",this.ajax.showToast(this.respMsg.msg,3e3,"success","bottom"),this.dismiss(!0)):(this.validationArray.mobile=[{value:this.updateForm.get("mobile").value,disabled:!0},[s.f.required,s.f.pattern("^[0-9]+$"),s.f.maxLength(10),s.f.minLength(10)]],this.validationArray.otp=["",[s.f.required,s.f.pattern("^[0-9]+$"),s.f.maxLength(6),s.f.minLength(6)]],this.updateForm=this.formBuilder.group(this.validationArray))):this.otpInput=""})}}resendOtp(){this.respMsg=null,this.otpInput="",this.updateForm.value.otp="",this.maxTime=30,this.ajax.showLoader("");let n=a.a.mobileupdate_send_otp,e=encodeURI("mobile="+this.updateForm.get("mobile").value);this.ajax.postMethod(n,e,{}).subscribe(n=>{this.isSubmitted=!1,this.ajax.hideLoader(),this.respMsg=n,"success"==n.status&&this.StartTimer()})}StartTimer(){setTimeout(n=>{this.maxTime>0&&(this.StartTimer(),this.maxTime=this.maxTime-1)},1e3)}dismiss(n=!1){this.modalController.dismiss({dismissed:n})}};d.ctorParameters=()=>[{type:i.h},{type:s.a},{type:l.a},{type:i.i},{type:i.j},{type:i.k}],Object(o.c)([Object(t.nb)("mobile")],d.prototype,"mobileElement",void 0),Object(o.c)([Object(t.nb)("otp")],d.prototype,"otpElement",void 0),d=Object(o.c)([Object(t.n)({selector:"app-update-mobile",template:Object(o.f)(r("9DET")).default,styles:[Object(o.f)(r("QTN7")).default]})],d)},Z3Kw:function(n,e,r){"use strict";r.r(e),e.default='\x3c!-- <ion-header>\r\n    <ion-toolbar>\r\n        <ion-button slot="start" (click)="dismiss()" size="small" color="primary" fill="clear" shape="round">\r\n            <ion-icon name="arrow-back"></ion-icon>\r\n        </ion-button>\r\n        <ion-title>{{profile.email?\'Update\':\'Add\'}} Email Address</ion-title>\r\n    </ion-toolbar>\r\n</ion-header> --\x3e\r\n\r\n<ion-content class="ion-padding">\r\n    <ion-grid>\r\n\r\n        <ion-toolbar>\r\n            <ion-title color="tertiary" *ngIf="deviceSize">\r\n                <strong> {{(profile.email?\'Update your Email for communication\':\'Add your Email address for communication\')  | translate}}  </strong>\r\n            </ion-title>\r\n            <ion-text color="tertiary" *ngIf="!deviceSize">\r\n                <strong> {{(profile.email?\'Update your Email for communication\':\'Add your Email address for communication\')  | translate}}  </strong>\r\n            </ion-text>\r\n            <ion-buttons slot="start">\r\n                <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\r\n                    <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\r\n                </ion-button>\r\n            </ion-buttons>\r\n        </ion-toolbar>\r\n        <ion-row class="ion-padding-start">\r\n            <ion-col size="12">\r\n\r\n            </ion-col>\r\n        </ion-row>\r\n\r\n\r\n        <ion-col class="ion-no-padding">\r\n            <ion-row *ngIf="profile.email">\r\n                <ion-col size-md="4" size="12">\r\n                    <ion-item lines="none">\r\n                        <ion-label>{{"Current" | translate}} {{"Email" | translate}}</ion-label>\r\n                    </ion-item>\r\n                </ion-col>\r\n                <ion-col size-md="8" size="12">\r\n                    <ion-item lines="full">\r\n                        <ion-label color="medium">{{profile.email}}</ion-label>\r\n                    </ion-item>\r\n                </ion-col>\r\n            </ion-row>\r\n\r\n            <form [formGroup]="updateForm" (ngSubmit)="submitForm()" novalidate>\r\n                <ion-row>\r\n                    <ion-col size-md="4" size="12">\r\n                        <ion-item lines="none">\r\n                            <ion-label>{{(profile.email?\'New\':\'\') | translate}} {{"Email" | translate}}</ion-label>\r\n                        </ion-item>\r\n                    </ion-col>\r\n                    <ion-col size-md="8" size="12">\r\n                        <ion-item lines="full">\r\n                            <ion-input [disabled]="otp" minlength="3" maxlength="255" pattern="[A-Za-z0-9.%+-_]{2,}@[a-zA-Z-.]{2,}[.]{1}[a-zA-Z]{2,}" formControlName="email" type="email" required #email></ion-input>\r\n                        </ion-item>\r\n                        <ion-text color="danger" *ngIf="isSubmitted && errorControl.email.errors?.required">\r\n                            {{"Email" | translate}} {{"Req" | translate}}\r\n                        </ion-text>\r\n                        <ion-text color="danger" *ngIf="isSubmitted && errorControl.email.errors?.pattern">\r\n                            {{"Email" | translate}} {{"NotValid" | translate}}\r\n                        </ion-text>\r\n                        <ion-text color="danger" *ngIf="errorControl.email.errors?.notequalto">\r\n                            {{"Current and new email is same." | translate}}\r\n                        </ion-text>\r\n                    </ion-col>\r\n                </ion-row>\r\n\r\n                <ion-row *ngIf="otp">\r\n                    <ion-col size-md="4" size="12">\r\n                        <ion-item lines="none">\r\n                            <ion-label></ion-label>\r\n                        </ion-item>\r\n                    </ion-col>\r\n                    <ion-col size-md="8" size="12">\r\n                        <ion-item lines="none" class="no-padding-start">\r\n                            <ion-badge color="{{(respMsg.status==\'success\')?\'success\':\'danger\'}}" *ngIf="respMsg" class="ion-padding">\r\n                                {{(respMsg.status==\'success\')?respMsg.msg:respMsg.error_description}}\r\n                            </ion-badge>\r\n                        </ion-item>\r\n                    </ion-col>\r\n                </ion-row>\r\n\r\n                <ion-row *ngIf="otp">\r\n                    <ion-col size-md="4" size="12">\r\n                        <ion-item lines="none">\r\n                            <ion-label>OTP</ion-label>\r\n                        </ion-item>\r\n                    </ion-col>\r\n                    <ion-col size-md="8" size="12">\r\n                        <ion-item lines="full">\r\n                            <ion-input (keypress)="ajax.numberOnlyValidation($event)" maxlength="6" minlength="6" [(ngModel)]="otpInput" formControlName="otp" type="{{otpShow?\'text\':\'password\'}}" required #otp></ion-input>\r\n                            <ion-icon class="cursor" *ngIf="!errorControl.otp.pristine" (click)="changeType(\'otp\')" color="{{otpShow?\'primary\':\'dark\'}}" name="{{otpShow?\'eye\':\'eye-off\'}}" slot="end"></ion-icon>\r\n                        </ion-item>\r\n                        <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.required ">\r\n                            OTP is required.\r\n                        </ion-text>\r\n                        <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.pattern">\r\n                            Only numerical values allowed.\r\n                        </ion-text>\r\n                        <ion-text color="danger" *ngIf="otp && isSubmitted && (errorControl.otp.errors?.maxlength || errorControl.otp.errors?.minlength)">\r\n                            OTP must be of 6 digit.\r\n                        </ion-text>\r\n                        <br />\r\n\r\n                        <ion-text *ngIf="respMsg">\r\n                            {{(maxTime>0)?\'Wait for the OTP, resend after \'+maxTime+\' second\':\'\'}}\r\n                            <ion-text *ngIf="maxTime==0" (click)="resendOtp()" type="submit" fill="clear" size="small" class="cursor" color="primary">Resend OTP</ion-text>\r\n                        </ion-text>\r\n                    </ion-col>\r\n                </ion-row>\r\n\r\n                <ion-row class="mt-4">\r\n                    <ion-col>\r\n                        <ion-label class="ion-text-right">\r\n                            <ion-button class="ion-float-right" type="submit" color="primary" expand="block">{{"Submit" | translate}}</ion-button>\r\n                        </ion-label>\r\n                    </ion-col>\r\n                </ion-row>\r\n\r\n\r\n\r\n                <ion-row>\r\n                    <ion-col>\r\n                        \x3c!-- <ion-text color="{{(respMsg.status==\'success\')?\'primary\':\'danger\'}}" *ngIf="respMsg">\r\n                        {{(respMsg.status==\'success\')?respMsg.msg:respMsg.error_description}}\r\n\r\n                    </ion-text> --\x3e\r\n\r\n                    </ion-col>\r\n                </ion-row>\r\n            </form>\r\n\r\n        </ion-col>\r\n\r\n    </ion-grid>\r\n</ion-content>'},acej:function(n,e,r){"use strict";r.d(e,"a",(function(){return t})),r.d(e,"b",(function(){return i}));var o=r("1vRN");const t=async(n,e,r,t,i)=>{if(n)return n.attachViewToDom(e,r,i,t);if("string"!=typeof r&&!(r instanceof HTMLElement))throw new Error("framework delegate is missing");const s="string"==typeof r?e.ownerDocument&&e.ownerDocument.createElement(r):r;return t&&t.forEach(n=>s.classList.add(n)),i&&Object.assign(s,i),e.appendChild(s),await new Promise(n=>Object(o.c)(s,n)),s},i=(n,e)=>{if(e){if(n){const r=e.parentElement;return n.removeViewFromDom(r,e)}e.remove()}return Promise.resolve()}},bFEu:function(n,e,r){"use strict";r.d(e,"a",(function(){return u}));var o=r("mrSG"),t=r("9ans"),i=r("fXoL"),s=r("TEn/"),a=r("3Pt+"),l=r("AytR"),d=r("sRcL"),c=r("tyNb"),m=r("jhN1");let u=class{constructor(n,e,r,o,t,i){this.navCtlr=n,this.formBuilder=e,this.ajax=r,this.router=o,this.auth=t,this.titleService=i,this.profile=this.auth.userProfile(),this.addNomineeFormShow=!1,this.verifyOTPFormShow=!1,this.isSubmitted=!1,this.respMsg=null,this.minDate=new Date("1900-01-01").toLocaleDateString("en-CA"),this.maxDate=(new Date).toLocaleDateString("en-CA"),this.isVerifiedUser=l.a.verified_user_type.includes(this.profile.user_type)}ngAfterViewChecked(){this.updateProfileForm.controls.aadhar.valid||this.aadharElement.setFocus()}ionViewDidEnter(){this.titleService.setTitle("Verify Aadhaar")}ngOnInit(){this.auth.isVerified()&&this.navCtlr.navigateForward("issued-documents");let n={aadhar:[{value:"",disabled:!1},[a.f.required,a.f.pattern("[0-9? ]+$"),a.f.maxLength(12),a.f.minLength(12)]],name:[{value:"",disabled:!1},[a.f.required,a.f.pattern("[A-Za-z0-9? ]+$")]],dob:[{value:"",disabled:!1},[a.f.required]],gender:[{value:"",disabled:!1},[a.f.required]],consent:[null,a.f.required]};this.updateProfileForm=this.formBuilder.group(n,{validator:this.DobValidator("dob")})}submitForm(){let n=this.profile;if(this.isSubmitted=!0,this.respMsg=null,!this.updateProfileForm.valid)return!1;{let e=this.updateProfileForm.value.consent?"Y":"N";this.ajax.showLoader();let r=this.updateProfileForm.get("dob").value.toString().split("-"),o="&username="+n.user_name+"&consent="+e+"&uid="+this.updateProfileForm.get("aadhar").value+"&name="+this.updateProfileForm.get("name").value+"&dob="+r[2]+r[1]+r[0]+"&gender="+this.updateProfileForm.get("gender").value;this.ajax.postMethod(l.a.link_demo_auth,encodeURI(o),{}).subscribe(n=>{this.respMsg=n,this.ajax.hideLoader(),"success"==n.status&&(this.respMsg.msg="Aadhar updated.",this.auth.setProfile("profile"),this.ajax.showToast(this.respMsg.msg,3e3,"success","bottom"))})}}get errorControl(){return this.updateProfileForm.controls}onTermsChecked(){this.updateProfileForm.value.consent||this.updateProfileForm.patchValue({consent:null})}getDate(n){let e=new Date(n.target.value).toISOString().substring(0,10);this.updateProfileForm.get("dob").setValue(e,{onlyself:!0})}dismiss(){this.navCtlr.back()}DobValidator(n){return e=>{const r=e.controls[n];r.errors&&!r.errors.dobValidator||(this.maxDate>r.value&&this.minDate<r.value?r.setErrors(null):r.setErrors({dobValidator:!0}))}}};u.ctorParameters=()=>[{type:s.i},{type:a.a},{type:d.a},{type:c.g},{type:t.a},{type:m.d}],Object(o.c)([Object(i.nb)("aadhar")],u.prototype,"aadharElement",void 0),u=Object(o.c)([Object(i.n)({selector:"app-verify-aadhar",template:Object(o.f)(r("zFpd")).default,styles:[Object(o.f)(r("FfG1")).default]})],u)},ffdC:function(n,e,r){"use strict";r.r(e),e.default="ion-item:hover {\n  --background: #E2E0E0 !important;\n}"},goW5:function(n,e,r){"use strict";r.d(e,"a",(function(){return m}));var o=r("mrSG"),t=r("9ans"),i=r("fXoL"),s=r("TEn/"),a=r("3Pt+"),l=r("AytR"),d=r("sRcL"),c=r("tyNb");let m=class{constructor(n,e,r,o,t,i){this.modalController=n,this.formBuilder=e,this.ajax=r,this.router=o,this.navparam=t,this.auth=i,this.addNomineeFormShow=!1,this.verifyOTPFormShow=!1,this.isSubmitted=!1,this.respMsg=null,this.minDate=new Date("1900-01-01").toLocaleDateString("en-CA"),this.maxDate=(new Date).toLocaleDateString("en-CA"),this.profile=this.navparam.get("profile")}ngOnInit(){let n=this.profile.residentName?this.profile.residentName:"",e=this.profile.date_of_birth?new Date(this.profile.date_of_birth).toLocaleDateString("en-CA"):null,r=this.profile.gender?this.profile.gender:"",o={name:[{value:n,disabled:!1},[a.f.required,a.f.pattern("[A-Za-z0-9? ]+$")]],dob:[{value:e,disabled:!1},[a.f.required]],gender:[{value:r,disabled:!1},[a.f.required]]};this.updateProfileForm=this.formBuilder.group(o,{validator:this.DobValidator("dob")})}submitForm(){JSON.parse(sessionStorage.getItem(l.a.TOKEN_KEY));if(this.isSubmitted=!0,this.respMsg=null,!this.updateProfileForm.valid)return!1;{this.ajax.showLoader("");let n="&full_name="+this.updateProfileForm.value.name+"&dob="+this.updateProfileForm.value.dob+"&gender="+this.updateProfileForm.value.gender;this.ajax.postMethod(l.a.nonAadharUpdateProfile,encodeURI(n),{}).subscribe(n=>{this.ajax.hideLoader(),this.isSubmitted=!1,this.respMsg=n,"success"==n.status&&(this.respMsg.msg="Profile updated ...!",this.auth.setProfile("profile"),this.ajax.showToast(this.respMsg.msg,3e3,"success","bottom"),this.dismiss(!0))})}}get errorControl(){return this.updateProfileForm.controls}DobValidator(n){return e=>{const r=e.controls[n];r.errors&&!r.errors.dobValidator||(this.maxDate>r.value&&this.minDate<r.value?r.setErrors(null):r.setErrors({dobValidator:!0}))}}getDate(n){let e=new Date(n.target.value).toISOString().substring(0,10);this.updateProfileForm.get("dob").setValue(e,{onlyself:!0})}dismiss(n=!1){this.modalController.dismiss({dismissed:n})}};m.ctorParameters=()=>[{type:s.h},{type:a.a},{type:d.a},{type:c.g},{type:s.j},{type:t.a}],m=Object(o.c)([Object(i.n)({selector:"app-update-profile",template:Object(o.f)(r("RU3n")).default,styles:[Object(o.f)(r("kTlK")).default]})],m)},h3R7:function(n,e,r){"use strict";r.d(e,"a",(function(){return o}));const o={bubbles:{dur:1e3,circles:9,fn:(n,e,r)=>{const o=n*e/r-n+"ms",t=2*Math.PI*e/r;return{r:5,style:{top:9*Math.sin(t)+"px",left:9*Math.cos(t)+"px","animation-delay":o}}}},circles:{dur:1e3,circles:8,fn:(n,e,r)=>{const o=e/r,t=n*o-n+"ms",i=2*Math.PI*o;return{r:5,style:{top:9*Math.sin(i)+"px",left:9*Math.cos(i)+"px","animation-delay":t}}}},circular:{dur:1400,elmDuration:!0,circles:1,fn:()=>({r:20,cx:48,cy:48,fill:"none",viewBox:"24 24 48 48",transform:"translate(0,0)",style:{}})},crescent:{dur:750,circles:1,fn:()=>({r:26,style:{}})},dots:{dur:750,circles:3,fn:(n,e)=>({r:6,style:{left:9-9*e+"px","animation-delay":-110*e+"ms"}})},lines:{dur:1e3,lines:12,fn:(n,e,r)=>({y1:17,y2:29,style:{transform:`rotate(${30*e+(e<6?180:-180)}deg)`,"animation-delay":n*e/r-n+"ms"}})},"lines-small":{dur:1e3,lines:12,fn:(n,e,r)=>({y1:12,y2:20,style:{transform:`rotate(${30*e+(e<6?180:-180)}deg)`,"animation-delay":n*e/r-n+"ms"}})}}},kTlK:function(n,e,r){"use strict";r.r(e),e.default=""},lSO4:function(n,e,r){"use strict";r.r(e),e.default=".expand-wrapper {\n  transition: max-height 0.1s ease-in-out;\n  overflow: hidden;\n  height: auto;\n  -webkit-transition: max-height 0.1s ease-in-out;\n  -moz-transition: max-height 0.1s ease-in-out;\n  -ms-transition: max-height 0.1s ease-in-out;\n  -o-transition: max-height 0.1s ease-in-out;\n}\n\n.collapsed {\n  max-height: 0 !important;\n}"},"m/4U":function(n,e,r){"use strict";r.r(e),e.default=""},"nJp/":function(n,e,r){"use strict";r.d(e,"a",(function(){return s}));var o=r("mrSG"),t=r("fXoL"),i=r("TEn/");let s=class{constructor(n){this.popCtrl=n}ngOnInit(){}close(n){this.popCtrl.dismiss({label:n})}};s.ctorParameters=()=>[{type:i.l}],s=Object(o.c)([Object(t.n)({selector:"app-popover",template:Object(o.f)(r("GG96")).default,styles:[Object(o.f)(r("ffdC")).default]})],s)},pCm6:function(n,e,r){"use strict";r.r(e),e.default="<div #expandWrapper class='expand-wrapper' [class.collapsed]=\"!expanded\">\r\n    <ng-content></ng-content>\r\n</div>"},pZaC:function(n,e,r){"use strict";r.d(e,"a",(function(){return u}));var o=r("mrSG"),t=r("NFKh"),i=r("9ans"),s=r("fXoL"),a=r("TEn/"),l=r("3Pt+"),d=r("AytR"),c=r("sRcL"),m=r("tyNb");let u=class{constructor(n,e,r,o,i,s){this.modalController=n,this.formBuilder=e,this.ajax=r,this.router=o,this.auth=i,this.platform=s,this.deviceSize=this.platform.isLandscape(),this.isSubmitted=!1,this.respMsg=null,this.validationArray={pin:[{value:"",disabled:!1},[l.f.required,l.f.pattern("^[0-9]+$"),l.f.maxLength(6),l.f.minLength(6)]],cpin:[{value:"",disabled:!1},[l.f.required,l.f.pattern("^[0-9]+$"),l.f.maxLength(6),l.f.minLength(6)]]},this.did=Object(t.MD5)(this.auth.getDeviceId()).toString(),this.pinShow=!1,this.cpinShow=!1}ngAfterViewChecked(){this.updateForm.controls.pin.valid||this.pinElement.setFocus()}ngOnInit(){this.updateForm=this.formBuilder.group(this.validationArray,{validator:this.ConfirmedValidator("pin","cpin")})}changeType(n){"pin"==n?this.pinShow=!this.pinShow:this.cpinShow=!this.cpinShow}get errorControl(){return this.updateForm.controls}ConfirmedValidator(n,e){return r=>{const o=r.controls[n],t=r.controls[e];t.errors&&!t.errors.confirmedValidator||(o.value!==t.value?t.setErrors(null):t.setErrors({confirmedValidator:!0}))}}submitForm(){if(this.isSubmitted=!0,this.respMsg=null,!this.updateForm.valid)return!1;{this.ajax.showLoader("");let n=d.a.reset_pin,e=t.enc.Utf8.parse("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"),r=t.enc.Utf8.parse(this.did),o=t.AES.encrypt(this.updateForm.get("pin").value,r,{iv:e}).toString(),i=t.AES.encrypt(this.updateForm.get("cpin").value,r,{iv:e}).toString(),s=encodeURI(encodeURI(o.replace(/\+/,"---"))),a=encodeURI(encodeURI(i.replace(/\+/,"---"))),l=encodeURI("old_pin="+s+"&new_pin="+a);this.ajax.postMethod(n,l,{}).subscribe(n=>{this.ajax.hideLoader(),this.respMsg=n,"success"==n.status&&(this.respMsg={status:"success",msg:n.message},this.ajax.showToast(n.message,3e3,"success","bottom"),this.dismiss(!0))})}}dismiss(n=!0){this.modalController.dismiss({dismissed:n})}};u.ctorParameters=()=>[{type:a.h},{type:l.a},{type:c.a},{type:m.g},{type:i.a},{type:a.k}],Object(o.c)([Object(s.nb)("pin")],u.prototype,"pinElement",void 0),u=Object(o.c)([Object(s.n)({selector:"app-update-pin",template:Object(o.f)(r("85Y/")).default,styles:[Object(o.f)(r("5gva")).default]})],u)},qULd:function(n,e,r){"use strict";r.d(e,"a",(function(){return i})),r.d(e,"b",(function(){return s})),r.d(e,"c",(function(){return t})),r.d(e,"d",(function(){return l})),r.d(e,"e",(function(){return a}));const o={getEngine(){const n=window;return n.TapticEngine||n.Capacitor&&n.Capacitor.isPluginAvailable("Haptics")&&n.Capacitor.Plugins.Haptics},available(){return!!this.getEngine()},isCordova:()=>!!window.TapticEngine,isCapacitor:()=>!!window.Capacitor,impact(n){const e=this.getEngine();if(!e)return;const r=this.isCapacitor()?n.style.toUpperCase():n.style;e.impact({style:r})},notification(n){const e=this.getEngine();if(!e)return;const r=this.isCapacitor()?n.style.toUpperCase():n.style;e.notification({style:r})},selection(){this.impact({style:"light"})},selectionStart(){const n=this.getEngine();n&&(this.isCapacitor()?n.selectionStart():n.gestureSelectionStart())},selectionChanged(){const n=this.getEngine();n&&(this.isCapacitor()?n.selectionChanged():n.gestureSelectionChanged())},selectionEnd(){const n=this.getEngine();n&&(this.isCapacitor()?n.selectionEnd():n.gestureSelectionEnd())}},t=()=>{o.selection()},i=()=>{o.selectionStart()},s=()=>{o.selectionChanged()},a=()=>{o.selectionEnd()},l=n=>{o.impact(n)}},vEKE:function(n,e,r){"use strict";r.r(e),e.default=""},y5PO:function(n,e,r){"use strict";r.d(e,"a",(function(){return d}));var o=r("mrSG"),t=r("fXoL"),i=r("TEn/"),s=r("3Pt+"),a=r("AytR"),l=r("sRcL");let d=class{constructor(n,e,r,o,t){this.modalController=n,this.formBuilder=e,this.ajax=r,this.navparam=o,this.platform=t,this.deviceSize=this.platform.isLandscape(),this.isSubmitted=!1,this.otp=!1,this.otpInput="",this.respMsg=null,this.maxTime=30,this.timer=null,this.profile=this.navparam.get("profile"),this.otpShow=!1}ngAfterViewChecked(){this.updateForm.controls.email.valid||this.emailElement.setFocus(),this.updateForm.controls.otp.valid||this.otpElement.setFocus()}ngOnInit(){this.validationArray={email:[{value:"",disabled:!1},[s.f.required,s.f.pattern("[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$")]],otp:[{value:"",disabled:!1},[]]},this.updateForm=this.formBuilder.group(this.validationArray,{validator:this.ConfirmedValidator("email")})}changeType(n){this.otpShow=!this.otpShow}get errorControl(){return this.updateForm.controls}ConfirmedValidator(n){return e=>{const r=this.profile.email,o=e.controls[n];o.errors&&!o.errors.notequalto||(r!==o.value?o.setErrors(null):o.setErrors({notequalto:!0}))}}submitForm(){if(this.isSubmitted=!0,!this.updateForm.valid)return!1;{this.respMsg=null,this.ajax.showLoader("");let n=this.updateForm.value.otp?a.a.emailupdate_verify_otp:a.a.emailupdate_send_otp,e=this.updateForm.value.otp?encodeURI("email="+this.updateForm.get("email").value+"&otp="+this.updateForm.get("otp").value):encodeURI("email="+this.updateForm.get("email").value);this.ajax.postMethod(n,e,{}).subscribe(n=>{this.ajax.hideLoader(),this.isSubmitted=!1,this.respMsg=n,"success"==n.status?(this.ngAfterViewChecked(),this.respMsg.msg="OTP sent to your new Email id.",this.otp=!0,this.updateForm.value.otp?(this.ajax.showToast("Email updated successfully.",3e3,"success","bottom"),this.dismiss(!0)):(this.StartTimer(),this.validationArray.email=[{value:this.updateForm.get("email").value,disabled:!1},[s.f.required,s.f.pattern("[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$")]],this.validationArray.otp=["",[s.f.required,s.f.pattern("^[0-9]+$"),s.f.maxLength(6),s.f.minLength(6)]],this.updateForm=this.formBuilder.group(this.validationArray))):this.otpInput=""})}}resendOtp(){if(this.respMsg=null,this.otpInput="",this.updateForm.value.otp="",this.maxTime=30,!this.updateForm.get("email").valid)return!1;{this.ajax.showLoader("");let n=a.a.emailupdate_send_otp,e=encodeURI("email="+this.updateForm.get("email").value);this.ajax.postMethod(n,e,{}).subscribe(n=>{this.ajax.hideLoader(),this.respMsg=n,"success"==n.status&&(this.StartTimer(),this.respMsg.msg="OTP re-sent to your new Email id.")})}}StartTimer(){setTimeout(n=>{this.maxTime>0&&(this.StartTimer(),this.maxTime=this.maxTime-1)},1e3)}dismiss(n=!1){this.modalController.dismiss({dismissed:n})}};d.ctorParameters=()=>[{type:i.h},{type:s.a},{type:l.a},{type:i.j},{type:i.k}],Object(o.c)([Object(t.nb)("email")],d.prototype,"emailElement",void 0),Object(o.c)([Object(t.nb)("otp")],d.prototype,"otpElement",void 0),d=Object(o.c)([Object(t.n)({selector:"app-update-email",template:Object(o.f)(r("Z3Kw")).default,styles:[Object(o.f)(r("TGoH")).default]})],d)},zFpd:function(n,e,r){"use strict";r.r(e),e.default='<ion-header>\r\n    <ion-toolbar>\r\n        <ion-buttons slot="start">\r\n            <ion-menu-button></ion-menu-button>\r\n        </ion-buttons>\r\n\r\n    </ion-toolbar>\r\n</ion-header>\r\n<ion-content class="ion-padding">\r\n    <ion-grid [fixed]="true">\r\n\r\n        <ion-row>\r\n            <ion-col size-md="8" offset-md="2">\r\n                <ion-row>\r\n                    <ion-col>\r\n                        <ion-text color="tertiary" mode="ios" class="ion-text-center">\r\n                            <h2><strong>\r\n                                {{"VerifyAadhaarHeader" | translate}}\r\n                            </strong>\r\n                            </h2>\r\n                        </ion-text>\r\n                        <ion-text class="ion-text-center">\r\n\r\n                            <h4>{{"VerifyAadhaarSubHeading" | translate}}</h4>\r\n                        </ion-text>\r\n\r\n                    </ion-col>\r\n                    \x3c!--  <ion-col class="ion-text-center">\r\n                       <img src="https://img1.digitallocker.gov.in/assets/img/icons/verify-aadhaar-1.svg"> \r\n                    \r\n                        <ion-text color="tertiary" mode="ios" class="ion-text-center ">\r\n                            <h2 class="ion-no-margin-bottom"><strong>\r\n                                {{"VerifyAadhaarHeader" | translate}} </strong>\r\n                            </h2>\r\n                        </ion-text>\r\n                        <ion-text class="ion-text-center" color="medium">\r\n                            {{"VerifyAadhaarSubHeading" | translate}}\r\n                        </ion-text>\r\n                    </ion-col>--\x3e\r\n                </ion-row>\r\n                <ion-row>\r\n                    <ion-col size-md="10" offset-md="1">\r\n\r\n                        <ion-card class="ion-padding ion-no-margin" mode="ios">\r\n\r\n                            <form [formGroup]="updateProfileForm" (ngSubmit)="submitForm()" novalidate>\r\n                                <ion-row>\r\n                                    <ion-col size-md="4" size="4">\r\n                                        <ion-item lines="none">\r\n                                            <ion-label>{{"Aadhaar" | translate}}</ion-label>\r\n                                        </ion-item>\r\n                                    </ion-col>\r\n                                    <ion-col size-md="8" size="8">\r\n                                        <ion-item lines="full" mode="md">\r\n                                            <ion-input (keypress)="ajax.numberOnlyValidation($event)" maxlength="12" minlength="12" formControlName="aadhar" type="text" required #aadhar></ion-input>\r\n                                        </ion-item>\r\n                                        <ion-text color="danger" *ngIf="isSubmitted && errorControl.aadhar.errors?.required">\r\n                                            Aadhaar number is required.\r\n                                        </ion-text>\r\n                                        <ion-text color="danger" *ngIf="isSubmitted && errorControl.aadhar.errors?.pattern">\r\n                                            Only numbers allowed.\r\n                                        </ion-text>\r\n                                        <ion-text color="danger" *ngIf="isSubmitted && (errorControl.aadhar.errors?.maxlength || errorControl.aadhar.errors?.minlength)">\r\n                                            Must be of 12 digit.\r\n                                        </ion-text>\r\n                                    </ion-col>\r\n                                </ion-row>\r\n\r\n                                <ion-row>\r\n                                    <ion-col size-md="4" size="4">\r\n                                        <ion-item lines="none">\r\n                                            <ion-label>{{"Name" | translate}}</ion-label>\r\n                                        </ion-item>\r\n                                    </ion-col>\r\n                                    <ion-col size-md="8" size="8">\r\n                                        <ion-item lines="full" mode="md">\r\n                                            <ion-input (keypress)="ajax.nameValidation($event)" [attr.disabled]="!errorControl.aadhar.valid" formControlName="name" type="text" required></ion-input>\r\n                                        </ion-item>\r\n                                        <ion-text color="danger" *ngIf="isSubmitted && errorControl.name.errors?.required">\r\n                                            Name is required.\r\n                                        </ion-text>\r\n                                        <ion-text color="danger" *ngIf="isSubmitted && errorControl.name.errors?.pattern">\r\n                                            Only alphabets , numbers and space values allowed.\r\n                                        </ion-text>\r\n                                    </ion-col>\r\n                                </ion-row>\r\n\r\n                                <ion-row>\r\n                                    <ion-col size-md="4" size="4">\r\n                                        <ion-item lines="none">\r\n                                            <ion-label>{{"DOB" | translate}}</ion-label>\r\n                                        </ion-item>\r\n                                    </ion-col>\r\n                                    <ion-col size-md="8" size="8">\r\n                                        <ion-item lines="full" mode="md">\r\n                                            <ion-input placeholder="" [attr.disabled]="!errorControl.name.valid" type="date" [min]="minDate" [max]="maxDate" displayFormat="DD MMMM YYYY" (ionChange)="getDate($event)" formControlName="dob" required></ion-input>\r\n                                        </ion-item>\r\n                                        <ion-text color="danger" *ngIf="isSubmitted && errorControl.dob.errors?.required">\r\n                                            Date of birth is required.\r\n                                        </ion-text>\r\n                                        <ion-text color="danger" *ngIf="errorControl.dob.errors?.dobValidator">\r\n                                            Date of birth not valid.\r\n                                        </ion-text>\r\n                                    </ion-col>\r\n                                </ion-row>\r\n\r\n                                <ion-row>\r\n                                    <ion-col size-md="4" size="4">\r\n                                        <ion-item lines="none">\r\n                                            <ion-label>{{"Gender" | translate}} </ion-label>\r\n                                        </ion-item>\r\n                                    </ion-col>\r\n                                    <ion-col size-md="8" size="8">\r\n                                        <ion-item lines="none" mode="md">\r\n                                            <ion-radio-group value="Gender" formControlName="gender" style="display: inline-flex;" class="ion-no-padding-start" required>\r\n\r\n                                                <ion-item lines="none" class="ion-no-padding">\r\n                                                    <ion-label>{{"Male" | translate}}</ion-label>\r\n                                                    <ion-radio [attr.disabled]="!errorControl.dob.valid" slot="start" value="M"></ion-radio>\r\n                                                </ion-item>\r\n\r\n                                                <ion-item lines="none" class="ion-no-padding">\r\n                                                    <ion-label>{{"Female" | translate}}</ion-label>\r\n                                                    <ion-radio [attr.disabled]="!errorControl.dob.valid" slot="start" value="F"></ion-radio>\r\n                                                </ion-item>\r\n\r\n                                                <ion-item lines="none" class="ion-no-padding">\r\n                                                    <ion-label>{{\'Other\' | translate}}</ion-label>\r\n                                                    <ion-radio [attr.disabled]="!errorControl.dob.valid" slot="start" value="O"></ion-radio>\r\n                                                </ion-item>\r\n\r\n                                            </ion-radio-group>\r\n                                        </ion-item>\r\n                                        <ion-label color="danger" *ngIf="isSubmitted && errorControl.gender.errors?.required">\r\n                                            Gender is required.\r\n                                        </ion-label>\r\n                                    </ion-col>\r\n                                </ion-row>\r\n\r\n                                <ion-row>\r\n                                    <ion-col>\r\n                                        <ion-list>\r\n                                            <ion-item lines="none" mode="md">\r\n                                                <ion-text> <small>I give my consent to DigiLocker to use my Aadhaar number & OTP to fetch my details from UIDAI for availing services through it.</small></ion-text>\r\n                                                <ion-checkbox mode="md" slot="start" [attr.disabled]="!errorControl.gender.valid" [checked]="true" mode="ios" formControlName="consent" (ionChange)="onTermsChecked()" required></ion-checkbox>\r\n                                            </ion-item>\r\n                                        </ion-list>\r\n                                        <ion-label color="danger" *ngIf="isSubmitted && errorControl.consent.errors?.required">\r\n                                            Consent is required.\r\n                                        </ion-label>\r\n                                    </ion-col>\r\n                                </ion-row>\r\n\r\n\r\n                                <ion-row>\r\n                                    <ion-col>\r\n                                        <ion-button type="submit" color="primary" class="ion-float-right" mode="md">{{"Submit" | translate}}</ion-button>\r\n                                    </ion-col>\r\n                                </ion-row>\r\n\r\n                            </form>\r\n                        </ion-card>\r\n\r\n                    </ion-col>\r\n                </ion-row>\r\n            </ion-col>\r\n        </ion-row>\r\n    </ion-grid>\r\n</ion-content>'}}]);